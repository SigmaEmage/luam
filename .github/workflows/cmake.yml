name: CMake

on:
  push:
    branches: [ v2 ]
  pull_request:
    branches: [ v2 ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Checkout submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Fetch openssl
      run: cd C:/ && git clone https://github.com/Malte0621/OpenSSL-Dependency.git

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DOPENSSL_ROOT_DIR="C:/OpenSSL-Dependency/Win64" -DOPENSSL_INCLUDE_DIR="C:/OpenSSL-Dependency/Win64/include" -DOPENSSL_LIBRARIES="C:/OpenSSL-Dependency/Win64/lib"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: 'Upload Artifact (Unprotected)'
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact-unprotected
        path: |
            ${{github.workspace}}/build/**/luam.exe
        retention-days: 5
